name: Release

on:
  workflow_dispatch:
    inputs:
      release-name:
        type: string
        required: true

env:
  BUILD_TYPE: Release

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Create release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        hub release create -d -m "${{ github.event.inputs.release-name }}" ${GITHUB_REF##*/}

  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    needs: [ create-release ]

    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Ubuntu gcc"
          os: ubuntu-latest
          artifact: "linux"
          cc: "gcc"
          cxx: "g++"
          generator: "Ninja"
          github_env: $GITHUB_ENV
          nmres: "linux"
        
        - name: "Windows MinGW"
          os: windows-latest
          artifact: "windows"
          cc: "gcc"
          cxx: "g++"
          generator: "Ninja"
          github_env: $env:GITHUB_ENV
          nmres: "windows"
        

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: "[Windows] Install dependencies"
        if: startsWith(matrix.config.os, 'windows')
        run: |
          ninja --version
          cmake --version
        
      - name: "[Ubuntu] install dependencies"
        if: startsWith(matrix.config.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake
          sudo apt-get install -y libxinerama-dev libxrandr-dev libxcursor-dev libxi-dev libgl-dev
          ninja --version
          cmake --version
          gcc --version
      
      - name: Install nmres
        uses: suisei-cn/actions-download-file@v1.3.0
        id: nmresdownload
        with:
          url: https://github.com/Lexographics/nmResource/releases/download/v1.1/nmres.${{ matrix.config.nmres }}.zip
          target: nmres_app/

      - name: "[Ubuntu] Run nmres"
        if: startsWith(matrix.config.os, 'ubuntu')
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
          7z x nmres_app/${{ steps.nmresdownload.outputs.filename }}
          chmod +x nmres
          ./nmres --recursive --cwd Ease --namespace Ease::Res --suffix .res.hpp --rules ${{github.workspace}}/res_rules.txt
        
      - name: "[Windows] Run nmres"
        if: startsWith(matrix.config.os, 'windows')
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
          7z x nmres_app\\${{ steps.nmresdownload.outputs.filename }}
          .\\nmres.exe --recursive --cwd Ease --namespace Ease::Res --suffix .res.hpp --rules res_rules.txt
      
      - name: Configure
        shell: bash
        run: |
          mkdir build
          mkdir package
          cmake    \
            -S .    \
            -B build \
            -D CMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -G "${{ matrix.config.generator }}" \
            -D Editor=On
        
      - name: Build
        shell: bash
        run: cmake --build build/ --config ${{ env.BUILD_TYPE }} --parallel 4

      - name: Package
        shell: bash
        working-directory: build
        run: cpack
      
      - name: "Upload Release assets"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          hub release edit $(find package/ -maxdepth 1 -type f -printf "-a %p " -name "*.exe" -o -name "*.zip" -o -name "*.tar.gz") -m "" ${GITHUB_REF##*/}